# PODNAME: MooX::Options::Manual::ImportParameters
# ABSTRACT: Import Parameters of MooX::Options

=head1 DESCRIPTION

The list of parameters support by L<MooX::Options>.

=head1 IMPORT PARAMETERS

=head2 flavour

Pass extra arguments for L<Getopt::Long::Descriptive>. It is usefull if you
want to configure Getopt::Long.

  use MooX::Options flavour => [qw( pass_through )];

Any flavour is pass to L<Getopt::Long> as a configuration, check the doc to see what is possible.

=head2 protect_argv

By default, @ARGV is protected. if you want to do something else on it, use this option and it will change the real @ARGV.

  use MooX::Options protect_argv => 0;

=head2 skip_options

If you have Role with options and your want to disactivate some of them, you can use this parameter.
In that case, the 'option' keyword will just works like an 'has'.

  use MooX::Options skip_options => [qw/multi/];

=head2 prefer_commandline

By default, arguments to B<new_with_options> have a higher priority than the commandline options.

This parameter give to the commandline an higher priority.

  use MooX::Options prefer_commandline => 1;

=head2 with_config_from_file

This parameter will load L<MooX::ConfigFromFile> in your module. 
The config option will be used between the commandline and the parameters.

myTool :

  use MooX::Options with_config_from_file => 1;

In /etc/myTool.json

  {"test" : 1}

=head1 SEE ALSO

L<MooX::Options>